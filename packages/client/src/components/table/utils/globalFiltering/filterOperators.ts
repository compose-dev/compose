import { UI } from "@composehq/ts-public";

const COLUMN_FILTER_LOGIC_OPERATOR_TO_LABEL = {
  [UI.Table.COLUMN_FILTER_LOGIC_OPERATOR.AND]: "AND",
  [UI.Table.COLUMN_FILTER_LOGIC_OPERATOR.OR]: "OR",
} as const;

const COLUMN_FILTER_OPERATOR_TO_LABEL = {
  [UI.Table.COLUMN_FILTER_OPERATOR.IS]: "Is",
  [UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT]: "Is not",
  [UI.Table.COLUMN_FILTER_OPERATOR.INCLUDES]: "Includes",
  [UI.Table.COLUMN_FILTER_OPERATOR.NOT_INCLUDES]: "Does not include",
  [UI.Table.COLUMN_FILTER_OPERATOR.GREATER_THAN]: "Greater than",
  [UI.Table.COLUMN_FILTER_OPERATOR.GREATER_THAN_OR_EQUAL]:
    "Greater than or equal to",
  [UI.Table.COLUMN_FILTER_OPERATOR.LESS_THAN]: "Less than",
  [UI.Table.COLUMN_FILTER_OPERATOR.LESS_THAN_OR_EQUAL]: "Less than or equal to",
  [UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY]: "Is empty",
  [UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY]: "Is not empty",
  [UI.Table.COLUMN_FILTER_OPERATOR.HAS_ANY]: "Has any of",
  [UI.Table.COLUMN_FILTER_OPERATOR.NOT_HAS_ANY]: "Does not have any of",
  [UI.Table.COLUMN_FILTER_OPERATOR.HAS_ALL]: "Has all of",
  [UI.Table.COLUMN_FILTER_OPERATOR.NOT_HAS_ALL]: "Does not have all of",
} as const;

const COLUMN_FILTER_OPERATOR_TO_SHORT_LABEL = {
  [UI.Table.COLUMN_FILTER_OPERATOR.IS]: "=",
  [UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT]: "≠",
  [UI.Table.COLUMN_FILTER_OPERATOR.INCLUDES]: "Includes",
  [UI.Table.COLUMN_FILTER_OPERATOR.NOT_INCLUDES]: "Not includes",
  [UI.Table.COLUMN_FILTER_OPERATOR.GREATER_THAN]: ">",
  [UI.Table.COLUMN_FILTER_OPERATOR.GREATER_THAN_OR_EQUAL]: "≥",
  [UI.Table.COLUMN_FILTER_OPERATOR.LESS_THAN]: "<",
  [UI.Table.COLUMN_FILTER_OPERATOR.LESS_THAN_OR_EQUAL]: "≤",
  [UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY]: "Is empty",
  [UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY]: "Is not empty",
  [UI.Table.COLUMN_FILTER_OPERATOR.HAS_ANY]: "Has any",
  [UI.Table.COLUMN_FILTER_OPERATOR.NOT_HAS_ANY]: "Not has any",
  [UI.Table.COLUMN_FILTER_OPERATOR.HAS_ALL]: "Has all",
  [UI.Table.COLUMN_FILTER_OPERATOR.NOT_HAS_ALL]: "Not has all",
} as const;

const TEXT_COLUMN_FILTER_OPERATORS: UI.Table.ColumnFilterOperator[] = [
  UI.Table.COLUMN_FILTER_OPERATOR.IS,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT,
  UI.Table.COLUMN_FILTER_OPERATOR.INCLUDES,
  UI.Table.COLUMN_FILTER_OPERATOR.NOT_INCLUDES,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY,
];

const NUMERIC_COLUMN_FILTER_OPERATORS: UI.Table.ColumnFilterOperator[] = [
  UI.Table.COLUMN_FILTER_OPERATOR.GREATER_THAN,
  UI.Table.COLUMN_FILTER_OPERATOR.GREATER_THAN_OR_EQUAL,
  UI.Table.COLUMN_FILTER_OPERATOR.LESS_THAN,
  UI.Table.COLUMN_FILTER_OPERATOR.LESS_THAN_OR_EQUAL,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY,
];

const BOOLEAN_COLUMN_FILTER_OPERATORS: UI.Table.ColumnFilterOperator[] = [
  UI.Table.COLUMN_FILTER_OPERATOR.IS,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY,
];

const TAG_COLUMN_FILTER_OPERATORS: UI.Table.ColumnFilterOperator[] = [
  UI.Table.COLUMN_FILTER_OPERATOR.IS,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT,
  UI.Table.COLUMN_FILTER_OPERATOR.HAS_ANY,
  UI.Table.COLUMN_FILTER_OPERATOR.NOT_HAS_ANY,
  UI.Table.COLUMN_FILTER_OPERATOR.HAS_ALL,
  UI.Table.COLUMN_FILTER_OPERATOR.NOT_HAS_ALL,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY,
  UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY,
];

const COLUMN_FORMAT_TO_FILTER_OPERATORS: Record<
  UI.Table.ColumnFormat,
  UI.Table.ColumnFilterOperator[]
> = {
  [UI.Table.COLUMN_FORMAT.string]: TEXT_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.json]: TEXT_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.number]: NUMERIC_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.currency]: NUMERIC_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.date]: NUMERIC_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.datetime]: NUMERIC_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.boolean]: BOOLEAN_COLUMN_FILTER_OPERATORS,
  [UI.Table.COLUMN_FORMAT.tag]: TAG_COLUMN_FILTER_OPERATORS,
};

const COLUMN_FORMAT_TO_LABEL_LENGTH: Record<
  UI.Table.ColumnFormat,
  "short" | "standard"
> = {
  [UI.Table.COLUMN_FORMAT.string]: "standard",
  [UI.Table.COLUMN_FORMAT.json]: "standard",
  [UI.Table.COLUMN_FORMAT.number]: "short",
  [UI.Table.COLUMN_FORMAT.currency]: "short",
  [UI.Table.COLUMN_FORMAT.date]: "short",
  [UI.Table.COLUMN_FORMAT.datetime]: "short",
  [UI.Table.COLUMN_FORMAT.boolean]: "standard",
  [UI.Table.COLUMN_FORMAT.tag]: "standard",
};

const OPERATOR_INPUT_TYPE = {
  NO_INPUT: "NO_INPUT",
  TEXT: "TEXT",
  NUMBER: "NUMBER",
  BOOLEAN_SELECT: "BOOLEAN_SELECT",
  MULTI_SELECT: "MULTI_SELECT",
  DATE_INPUT: "DATE_INPUT",
  DATE_TIME_INPUT: "DATE_TIME_INPUT",
} as const;

function getOperatorInputType(
  operator: UI.Table.ColumnFilterOperator,
  columnFormat: UI.Table.ColumnFormat | undefined
) {
  if (
    operator === UI.Table.COLUMN_FILTER_OPERATOR.IS_EMPTY ||
    operator === UI.Table.COLUMN_FILTER_OPERATOR.IS_NOT_EMPTY
  ) {
    return OPERATOR_INPUT_TYPE.NO_INPUT;
  }

  if (columnFormat === UI.Table.COLUMN_FORMAT.boolean) {
    return OPERATOR_INPUT_TYPE.BOOLEAN_SELECT;
  }

  if (columnFormat === UI.Table.COLUMN_FORMAT.date) {
    return OPERATOR_INPUT_TYPE.DATE_INPUT;
  }

  if (columnFormat === UI.Table.COLUMN_FORMAT.datetime) {
    return OPERATOR_INPUT_TYPE.DATE_TIME_INPUT;
  }

  if (
    columnFormat === UI.Table.COLUMN_FORMAT.number ||
    columnFormat === UI.Table.COLUMN_FORMAT.currency
  ) {
    return OPERATOR_INPUT_TYPE.NUMBER;
  }

  if (columnFormat === UI.Table.COLUMN_FORMAT.tag) {
    return OPERATOR_INPUT_TYPE.MULTI_SELECT;
  }

  return OPERATOR_INPUT_TYPE.TEXT;
}

export {
  COLUMN_FILTER_LOGIC_OPERATOR_TO_LABEL,
  COLUMN_FILTER_OPERATOR_TO_LABEL,
  COLUMN_FILTER_OPERATOR_TO_SHORT_LABEL,
  COLUMN_FORMAT_TO_FILTER_OPERATORS,
  COLUMN_FORMAT_TO_LABEL_LENGTH,
  TEXT_COLUMN_FILTER_OPERATORS,
  NUMERIC_COLUMN_FILTER_OPERATORS,
  BOOLEAN_COLUMN_FILTER_OPERATORS,
  TAG_COLUMN_FILTER_OPERATORS,
  OPERATOR_INPUT_TYPE,
  getOperatorInputType,
};
